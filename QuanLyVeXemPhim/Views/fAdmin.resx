<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIgAAAA7CAYAAACg5MKJAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAqNSURBVHhe7V0JzB1VFZ4ubFJ7UETDqSIokkgVlbig
        FCQIUlkEZRHRChG0JTgGFaPiGoMoaSgakSguQSEKIqImGECtGo27QsQ1goLbaWkHN9RWhZoPz6vT779v
        5s6d+97f///fl3xJ+2bud+57c+cu555z/6KYYNbDVF5jKv80lZ+ZymPq16qyOL0qi3uqsritKovH1a9N
        MAdgKgtMZZOpbHF+fHCtKotFVVncW5XFFudl25aeYE7AVP5QayB/NZVd8HlVFitqjQO8gMtOMAdgKu+t
        NRDwZHxelcVN1ECWctkJ5gBM5RnUQD5blcWeVVncV2sct3K5CWYpqrI4sSqL1VVZPGvwmancUWsgm6uV
        895Evcd5ft9CUznFVF5nKg/fRniCmY+qLI6iB39NVRb7mMoF9V5k41nz19buub8qCzWVo03lJ7X7vs/6
        E8xwVGVxNjUQcNPGM+dfbkvkP/7g11Xn1Caoq+Z9w1S+TMMQ+G/Wn2CGoyqL3auyuCXQSLZsOHnhmaZy
        AyatvsRdX5XF+bbX4psDjQO8kPUnmAWoymJhVRYrq7K4mxrJFbhuKjv7fTubyiNM5T5qGN82lYNZd4JZ
        hqospCqLi6qy2OwNZMpKxVROwFDiDePXPkGdx/dNMEthKvusO2DXS9Yv22XNuqWLduDrwIbjdnzqxtMW
        XF+tmre8Kov5fL0X0NpM5Qmmco6pfNRUvm4qvzGVylT+Ziq/M5VrTOVwLjsKmMoOXp/DTOUgUxG+Zy7A
        VJ5oKmtp6PipqTy9fp/3MJtqw9BdVVmcW78nCV6B1abyx8DkZhg/Yio7slZfmMpiU8EE7EbadwDRfX7a
        VB7N5WLgL8BzfJl4ham8z1ReNBjHxwlTmW8qh/rLeC48oqbyUL4PMJVbA78/+A5T2c9UjjeVnXgiW+PR
        rBkFU1nmD4INx/JDrJkKU9nTVN7vPRXbYf4ZHkXWaIKpHGAqPwpogXebyolcZlQwled7z8z1wAuxxlQe
        RPffFrgPL8pltc/+VJ0978KqLO4MNJDT6nqtMJUlpnJ1oIIp3OrhSwHeXlN5p29hs3YT0dvtxnohmMqB
        pvKXgAbzLC6bG6by6oBd5ndN5cG1MuhpvmcqXzGVVw6+t08D6uV2w7yjKovDq7K4yhvL1VVZ7LRNJZpg
        KiehtQUqlcqPsY1Y+IP7RUAzlm9jTQaGQVP5VaBsiHgz92ONXDCVZwaWocN4OZdn+DBZLxP1wgThYx66
        L65IX/6YbcXAVM4IzDG68oesyzCVFwfKNfF61sgBn/+gZ2B7w4iG1DjXMpV31+5HD5w2J/S3CGMWVyIH
        b2d7bcCbH9BJ4UbWZqCHC5Rr41NYpy/cR8F22riKdeowlT18DonNuzP4ehQ8CglLUzaei2vZZhNM5Y0B
        jVSuZ32GqdwUKNfGz7NOH3jvjWUp22njGtbKjkCASW5Gr7NN5aWB8n14M9tgmMpnAuVieBBrpcJUVgT0
        Y/gu1soKUzk1YDQn4ThbxHZDMJUnZ5hzMFewHYapvDZQLoY3slYKfHi/PaAfwxewXjaYyl6RPoVUYtn4
        NLYbgi9l67EJOQgvb6srGYEyCUvoAZexXldgHhHQjSF8M/HL067AbDxgNBe/air7s81hMJW3BDT6EDuU
        e7CdYXAvMWvE8Gus1QUIKDYVC+jGMHro7gzslQQMphAey8+5I+sVprLcVPZme01wD+nfA9ophCf0VQil
        YztNMJXd/buwXgwPY71YmMrrA3oxhJc1bckaA7T8gNEuxMYQGsMC1u6KHm/vgL/1ZKFODZNhKm8NaMfw
        W6wVA2wsYhke0IvhS1gvGwJRz12IL3Q8a6bCVHbtMQ+Cowg9V5Y3CZNpLIsDdmK4nPXa4BtprBND9JKj
        i+GgDZwuxEz7sazXB+4tZTsx/IepHMV6fRG5DxIiPKDRD81UHmYq9wZ0YngE62WDO8XuCRhtI8pkz+X0
        mEm2FcPjWCsHfMl5Z8BeDE9gvWHosaXR6tfphR7DS/atbl/apiwvP8BaOWEqpwdsxvCWmF7EVB6Z+L3v
        h6+I9bLCVM4PGG7jd1gnBxAGELDVRvhWWqPGfPmIVdWVvsrqwk/5w2DbMTyJ68JAjEygXAyvZK3sSIzx
        GFV3XgZstXE16zA8ROCuQNlxEEcuDHXOmcq+plvzVbpwc9vObRY0hKYNIyaDI/HWJe4BNYbnmwoyxlJX
        Irl4KtdrAFP5ZOD+GF7MWiOBBxez8SZ+iTVyIWGTDPs0jQ6wHiu0nETw0ZR6msqTEocuOPCCsajZUcuJ
        iOWHWSMXhqT/NfEO1mCYyoZAuenglNgLU/lC4L4YvoG1RoaA8Ta+hzVyIcGbOyURqA53unGZ6SJ8Rlvz
        Ujwlg++JIXbDHzgAZixImCBdyhq5gDV9wF4Tf84adXjIXtfvN0pujfZKeBkGfPm233LESAhGvoE1csFU
        rg3YayJm8lPG9jp6PIhREHtEcLwdGbgWQ6QyDF0RjQQIIA5UpInwoI6kkonexMYoLlM5JlBmOvkyT0Xg
        z2N4DH+/kcNUrgtUpI1Hsk4OuBOLbbXxEtZhIAwvUG66iMaRMuz1ijNJhqm8OVCZNmYJravDVJ4XsBND
        LPkewnoMz+2B65vLzxRGReJlh6dScmVimJa7GQAOd03cMBwwOp3T83j3DnB/93qydhv/FfgsN6/l7zE2
        +KQpJsWQuQ6bTKzXFb5RlRqgW+dQb2UMTOWigGYb8RvkTMkIEQ1wX67vWAHnV6BiMURQ8RLWi4VHrefa
        I8EP2XmH2ZfC9WyzLrzUNwG7nHDQlSNzK0TDE325YrH8vak8mzWb4Ectnuf7OqzXlxdzpvsw+EZZV+9t
        nQe6DpKj+VoOIrJu+ziKElv4gQp2ITLxGtMPPYQPIf19kq9jiKjwt5vKlJODPe4Txz1ixdR1m6HOrdmB
        3uBjk727sDXRfGwwlWMDFUzhL33IQnQ2DjrBgax4q785pgkdE2eTI4URTia4qfl6Kg+l3w+HyvA9fYhG
        HpVgNjb0PBhmLvG6wG+Hucyww2ZSuJJtTDsQY5oxH2W2En6X4OoNQdOB+1OIXrhxC2HagBNzAhWe8P88
        hX+zOjyDkMt05QtZd7tC4JiiCf/Hi/i3YvTYxh8wKelqrPBZ+RcDlZ8OImMvJbA6N6+KiVAHeuY4907+
        HgvgS+iRo5KLaBwP+DQ8lZKvj4s4vjM6pdTd9rHnitWZ9RCakcMPpcWPw19kHMQbu81ZpPCU9kjLTCEe
        Mo6+iuo56ggcFtdG7PA+nnVmBHzimpLYk0J4V4ceY+Dezx8EyuUm/BDPZfux8LNWENDEusM4sljfsQA5
        uGPwk+CAl9Z0Tp8jwQGXejxDE/Em43DexWy3KzocvIeDX6LPLtmu4Uc89HXLMxGncSzbagNC/z2bP0fk
        OlIoPphz59Tznj8RsFUnQj47nQA9I+BxJJifpIQKgCiHcfoQ1u4KJHL5ueU4trNLr4LhDCcaYrOtNX0z
        FX4QH5xfddsYfpA09Si+f1bBu/uDPTINDwgxrgj+GYTVYUMM/8fnCEpGt3vIqDyFfnzkUn8osIUteTRE
        EP9G+CGSsZG0nuUckVjgT3Ng5xt/cQEpGXx9e8R/AeSH8D2ICJ0cAAAAAElFTkSuQmCC
</value>
  </data>
</root>